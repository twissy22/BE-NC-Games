 app.get("/api/users",getUser)

 exports.getUsers = (req, res, next) => {
    selectUser()
    .then((reviews) => {

        res.status(200).send({ reviews });
      })
      .catch((err) => {
        next(err);
      });
}

exports.getUsers = (id)=> {
    return db
    .query(
      `SELECT name, username, avatar_url
      FROM users;`
    )
    .then((result) => {
      return result.rows;
    });
  };

  describe("/api/users", () => {
    test("GET 200: gets an array of user objects", () => {
      return request(app)
        .get("/api/categories")
        .expect(200)
        .then(({ body }) => {
          expect(body.users.length).toBeGreaterThan(0);
          body.users.forEach((user) => {
            expect(user).toMatchObject({
                name: expect.any(String),
                username: expect.any(String),
                avatar_url: expect.any(String)
            });
          });
        });
    })
    test("GET 404: when users not correctly entered", ()=> {
        return request(app)
          .get("/api/user")
          .expect(404)
          .then(({ body }) => {
            expect(body.msg).toBe("path not found");
      })
    })
})